import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

%matplotlib inline



DF = pd.read_csv("C:/bharat intern machine learning/Tarun_housing.csv")
DF.head()


DF.info()

DF.describe()


DF.columns


sns.pairplot(DF)


sns.displot(DF['Price'])

sns.heatmap(DF.corr(), annot=True)

X = DF[['Avg. Area Income', 'Avg. Area House Age', 'Avg. Area Number of Rooms',
               'Avg. Area Number of Bedrooms', 'Area Population']]

y = DF['Price']

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.4, random_state=101)


from sklearn.linear_model import LinearRegression 

lm = LinearRegression() 
lm.fit(X_train,y_train) 


print(lm.intercept_)

import pandas as pd
coeff_df = pd.DataFrame(lm.coef_, X.columns, columns=['Coefficient'])
coeff_df

predictions = lm.predict(X_test) 

plt.scatter(y_test,predictions)

sns.distplot((y_test-predictions),bins=50);

from sklearn import metrics
print('MAE:', metrics.mean_absolute_error(y_test, predictions)) 
print('MSE:', metrics.mean_squared_error(y_test, predictions)) 
print('RMSE:', np.sqrt(metrics.mean_squared_error(y_test, predictions)))


